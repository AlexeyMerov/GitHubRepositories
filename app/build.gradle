apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion buildVersions.compileSdk
    buildToolsVersion buildVersions.buildTools

    defaultConfig {
        applicationId = names.applicationId
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode = buildVersions.buildCode
        versionName = buildVersions.buildName
    }

    buildTypes {
        release {
            debuggable = false
            shrinkResources = true
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildOutputApkName(applicationVariants, buildVersions.buildCode)
        }
        debug {
            buildOutputApkName(applicationVariants, buildVersions.buildCode)
        }
    }

    compileOptions {
        sourceCompatibility = buildVersions.javaCompability
        targetCompatibility = buildVersions.javaCompability
    }

    kotlinOptions {
        jvmTarget = buildVersions.javaCompability
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
//        lintConfig file("lint.xml")
//        baseline file("baseline-lint.xml")
//        warningsAsErrors = true
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.ktx}"

    debugImplementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging}"
    debugImplementation "com.facebook.stetho:stetho:${versions.stetho}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"

    // Android
    implementation "androidx.appcompat:appcompat:${versions.appCompat}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "com.google.android.material:material:${versions.material}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.retrofit_adapter}"

    // Moshi
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    // DI
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.hilt_lifecycle}"
    kapt "androidx.hilt:hilt-compiler:${versions.hilt_lifecycle}"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.livedata_ktx}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment_ktx}"

    // Room
    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    // Permissions with dsl
    implementation "com.github.fondesa:kpermissions:${versions.kpermissions}"

    // Firebase
    implementation "com.firebaseui:firebase-ui-auth:${versions.firebase}"
    implementation "com.firebaseui:firebase-ui-auth-github:${versions.firebase}"
}

kapt {
    correctErrorTypes = true
}

apply plugin: 'com.google.gms.google-services'